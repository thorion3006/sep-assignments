A sequence of address references is said to have spatial locality if things that
are created close in time also have close memory addresses.
The biggest performance benefit of spatial locality is that it translates to lesser
calls to RAM as the data requested the processor is more lively to be found in the Cache.

Arrays Vs Linked List benchmark test:
Arrays:
Time taken to create a 10,000 item Array:   0.000000   0.000000   0.000000 (  0.000738)
Time taken to access 5000th element of the Array:   0.000000   0.000000   0.000000 (  0.000001)
Time taken to delete 5000th element of the Array:   0.000000   0.000000   0.000000 (  0.000005)

Linked Lists:
Time taken to create a 10,000 item Linked List:   0.010000   0.000000   0.010000 (  0.006560)
Time taken to access 5000th element of the Linked List:   0.000000   0.000000   0.000000 (  0.000193)
Time taken to delete 5000th element of the Linked List:   0.000000   0.000000   0.000000 (  0.000193)

From the above benchmark we can conclude that the creation time of an array is almost 10 times faster
than that of a linked list. And when it comes to accessing and deleting an element from the array as to
linked lists, arrays are 100 times faster.


#Added prev variable to node
I added a third variable to the node to store the location of the previous node. This
enables us to traverse through the node in both the directions, which helps us to find
a particular node in the list with the least possible iteration.
